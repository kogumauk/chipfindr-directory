---
import Breadcrumbs from '../components/Breadcrumbs.astro';
import Navigation from '../components/Navigation.astro';
import '../styles/global.css';

interface Props {
	title: string;
	description?: string;
	keywords?: string;
	canonicalUrl?: string;
	breadcrumbs?: { label: string; href?: string }[];
	structuredData?: any[];
	socialMetaTags?: Record<string, string>;
	imageUrl?: string;
}

const { 
	title, 
	description, 
	keywords, 
	canonicalUrl, 
	breadcrumbs, 
	structuredData = [],
	socialMetaTags = {},
	imageUrl 
} = Astro.props;

const siteName = "ChipFindr";
const fullTitle = `${title} - ${siteName}`;
const siteUrl = Astro.url.origin;

// Default social meta tags
const defaultSocialTags = {
	'og:title': fullTitle,
	'og:description': description || `Find the best fish & chip shops across the UK with ${siteName}`,
	'og:url': canonicalUrl || Astro.url.href,
	'og:type': 'website',
	'og:site_name': siteName,
	'og:image': imageUrl || `${siteUrl}/images/chipfindr-og-image.jpg`,
	'og:image:width': '1200',
	'og:image:height': '630',
	'og:locale': 'en_GB',
	'twitter:card': 'summary_large_image',
	'twitter:title': fullTitle,
	'twitter:description': description || `Find the best fish & chip shops across the UK with ${siteName}`,
	'twitter:image': imageUrl || `${siteUrl}/images/chipfindr-og-image.jpg`,
	'theme-color': '#2563eb',
};

// Merge with custom social tags
const finalSocialTags = { ...defaultSocialTags, ...socialMetaTags };
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- Preconnect to external domains for performance -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		
		<!-- PWA Meta Tags -->
		<meta name="theme-color" content="#1e40af" />
		<meta name="apple-mobile-web-app-capable" content="yes" />
		<meta name="apple-mobile-web-app-status-bar-style" content="default" />
		<meta name="apple-mobile-web-app-title" content="ChipFindr" />
		<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/manifest.webmanifest" />
		
		<!-- Primary Meta Tags -->
		<title>{fullTitle}</title>
		{description && <meta name="description" content={description} />}
		{keywords && <meta name="keywords" content={keywords} />}
		{canonicalUrl && <link rel="canonical" href={canonicalUrl} />}
		
		<!-- Social Media Meta Tags -->
		{Object.entries(finalSocialTags).map(([property, content]) => (
			property.startsWith('og:') ? 
				<meta property={property} content={content} /> :
				<meta name={property} content={content} />
		))}
		
		<!-- Structured Data -->
		{structuredData.map((data) => (
			<script type="application/ld+json" set:html={JSON.stringify(data)} />
		))}
		
		<!-- Additional SEO Meta Tags -->
		<meta name="robots" content="index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1" />
		<meta name="author" content="ChipFindr" />
		<link rel="sitemap" href="/sitemap.xml" />
		
		<!-- Performance Optimizations -->
		<link rel="dns-prefetch" href="//www.google-analytics.com" />
		<meta name="format-detection" content="telephone=no" />
		
		<!-- Critical CSS will be inlined here by build process -->
	</head>
	<body>
		<Navigation />
		{breadcrumbs && <Breadcrumbs items={breadcrumbs} />}
		<slot />
	</body>
	
	<!-- Performance Monitoring Script -->
	<script>
		// Simple Web Vitals monitoring without external imports
		if (typeof window !== 'undefined') {
			// Basic performance monitoring
			window.addEventListener('load', () => {
				// Monitor loading performance
				if (performance.getEntriesByType) {
					const navigation = performance.getEntriesByType('navigation')[0];
					if (navigation) {
						console.log('[Performance] Page Load Time:', navigation.loadEventEnd - navigation.loadEventStart + 'ms');
					}
				}
			});
			
			// PWA Service Worker Registration
			if ('serviceWorker' in navigator) {
				navigator.serviceWorker.register('/sw.js')
					.then((registration) => {
						console.log('[PWA] Service Worker registered');
					})
					.catch((error) => {
						console.log('[PWA] Service Worker registration failed:', error);
					});
			}
		}
	</script>
</html>

<style>
	html {
		background-color: #F6F6F6;
	}
	body {
		margin: 0;
		width: 100%;
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}
</style>
